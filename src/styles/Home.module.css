/* Container adjustments */
.container {
    display: flex;
    flex-direction: column;
    align-items: stretch;
    justify-content: center;
    gap: 1rem;
    color: var(--foreground);
    overflow-x: hidden;
}

/* Hero section - responsive layout */
.hero {
    display: flex;
    flex-wrap: wrap;
    flex-direction: row;
    justify-content: space-around;
    margin: 0 1rem;
    align-items: stretch;
    gap: 2rem;
}

.hero center {
    padding: 1rem;
    width: 100%;
    padding-top: 2rem;
    font-family: var(--font-serif);
    font-size: 0.9rem;
    text-transform: uppercase;
}

/* Main content responsive layout */
.mainContent {
    display: flex;
    gap: 2rem;
    flex-direction: column;
    align-items: center;
    justify-content: flex-start;
    flex-wrap: wrap;
}

/* Fixed responsive feature sides */
.featureSides {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
    gap: 0.5rem;
    width: 100%;
    max-width: none; /* Remove the 20rem limitation */
    margin: 0;
    padding: 1rem;
}

.featureSide {
    display: flex;
    flex-direction: column;
    background: var(--pureWhite);
    width: 100%; /* Use full grid cell width */
    align-items: center;
    justify-content: center;
    padding: 1rem;
    text-align: center;
    transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    border-radius: 16px;
    cursor: pointer;
    position: relative;
    overflow: hidden;
    z-index: 1;
    font-size: 0.8rem;
    animation: featureAppear 0.6s ease backwards;
    min-height: 120px;
}

/* Responsive main features */
.features {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: 1rem;
    margin: 1rem;
    width: 100%;
    max-width: 1200px;
}

.feature {
    background: var(--pureWhite);
    border-radius: 16px;
    padding: 1.5rem;
    text-align: center;
    transition: transform 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275), box-shadow 0.4s ease;
    cursor: pointer;
    position: relative;
    overflow: hidden;
    z-index: 1;
    animation: featureAppear 0.6s ease backwards;
    min-height: 200px;
    display: flex;
    flex-direction: column;
    justify-content: center;
}

/* CTA Section - always full width */
.ctaSection {
    display: flex;
    margin: 1rem auto;
    flex-direction: column;
    align-items: center;
    grid-column: 1 / -1; /* Span all columns in grid */
    padding: 1.5rem;
    border-radius: 16px;
}

/* Responsive breakpoints */
@media (max-width: 768px) {
    .hero {
        flex-direction: column;
        gap: 1rem;
        margin: 0 0.5rem;
    }
    
    .featureSides {
        grid-template-columns: 1fr;
        padding: 0.5rem;
    }
    
    .features {
        grid-template-columns: 1fr;
        margin: 0.5rem;
    }
    
    .mainContent {
        gap: 1rem;
    }
    
    .heroContent {
        padding: 1.5rem 2rem;
    }
    
    .heroContent h1 {
        font-size: 2rem;
    }
}

@media (max-width: 480px) {
    .container {
        gap: 0.5rem;
    }
    
    .hero {
        margin: 0 0.25rem;
    }
    
    .featureSides,
    .features {
        margin: 0.25rem;
        padding: 0.25rem;
    }
    
    .featureSide,
    .feature {
        padding: 1rem;
        font-size: 0.9rem;
    }
    
    .heroContent {
        padding: 1rem;
    }
    
    .heroContent h1 {
        font-size: 1.8rem;
    }
}

@media (min-width: 1024px) {
    .featureSides {
        grid-template-columns: repeat(2, 1fr);
        max-width: 500px;
    }
    
    .features {
        grid-template-columns: repeat(3, 1fr);
    }
}

@media (min-width: 1200px) {
    .features {
        grid-template-columns: repeat(4, 1fr);
    }
}

/* Keep all your existing hover effects and animations */
.featureSide:hover {
    transform: translateY(-10px) scale(1.03);
    background-color: white;
    box-shadow: 0 0px 10px rgba(0, 0, 0, 0.04);
}

.featureSide::before {
    content: '';
    position: absolute;
    inset: 0;
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0));
    opacity: 0;
    transition: opacity 0.4s ease;
    z-index: -1;
    border-radius: 16px;
}

.featureSide:hover::before {
    opacity: 1;
}

.featureSide .featureIcon {
    width: 70px;
    height: 70px;
    margin: 0 auto;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: transform 0.5s ease;
    position: relative;
    z-index: 2;
}

.featureSide h3 {
    font-weight: bold;
    margin: 1rem auto;
    display: inline-block;
    position: relative;
    transition: color 0.3s ease, transform 0.3s ease;
}

.featureSide:hover .featureIcon {
    transform: rotateY(180deg) scale(1.15);
}

.featureIcon img {
    width: 40px;
    height: 40px;
    transition: transform 0.5s ease;
}

.feature:hover .featureIcon img {
    transform: rotateY(-180deg);
}

.feature h3 {
    font-weight: bold;
    margin: 1rem auto;
    display: inline-block;
    position: relative;
    transition: color 0.3s ease, transform 0.3s ease;
}

.feature:nth-child(n) {
    animation-delay: calc(0.1s * var(--i, 1));
}

.feature:hover {
    transform: translateY(-10px) scale(1.03);
    box-shadow: 0 0px 10px rgba(0, 0, 0, 0.04);
}

.featureIcon {
    width: 70px;
    height: 70px;
    margin: 0 auto;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: transform 0.5s ease;
    position: relative;
    z-index: 2;
}

.feature:hover .featureIcon {
    transform: rotateY(180deg) scale(1.15);
}

.feature:hover h3 {
    color: var(--primary);
    transform: translateY(-3px);
}

.feature h3::after {
    content: '';
    position: absolute;
    bottom: -5px;
    left: 50%;
    width: 0;
    height: 2px;
    background: var(--primary);
    transition: width 0.3s ease, left 0.3s ease;
}

.feature:hover h3::after {
    width: 100%;
    left: 0;
}

.feature p {
    margin: 0 auto;
    padding: 1rem;
    border-radius: 10px;
    transition: opacity 0.3s ease, transform 0.3s ease;
}

.feature:hover p {
    transform: translateY(2px);
    opacity: 0.9;
}

/* CTA Button styling */
.ctaSection p {
    font-family: var(--font-serif);
    margin-bottom: 1rem;
    font-size: 1.1rem;
}

.ctaButton {
    margin-top: 1rem;
    padding: 0.8rem 1.6rem;
    font-weight: bold;
    font-size: 1rem;
    color: var(--background);
    background: linear-gradient(135deg, var(--tertiary), var(--quaternary));
    border-radius: 12px;
    cursor: pointer;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    border: none;
    position: relative;
    overflow: hidden;
}

.ctaButton::after {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    width: 200%;
    height: 200%;
    transform: translate(-50%, -50%) scale(0);
    background: radial-gradient(circle, rgba(255, 255, 255, 0.3) 10%, transparent 40%);
    opacity: 0;
    pointer-events: none;
    transition: transform 0.4s ease, opacity 0.4s ease;
}

.ctaButton:hover::after {
    transform: translate(-50%, -50%) scale(1);
    opacity: 1;
}

.ctaButton:hover {
    transform: scale(1.06) translateY(-2px);
}

/* Keep all your existing animations */
@keyframes featureAppear {
    from {
        opacity: 0;
        transform: translateY(30px) scale(0.9);
    }
    to {
        opacity: 1;
        transform: translateY(0) scale(1);
    }
}
