.container{
    display: flex;
    flex-direction: column;
    align-items: stretch;
    justify-content: center;
    gap: 1rem;
    color: var(--foreground);
}

.mainContent {
    display: flex;
    flex-direction: row; /* row instead of column */
    flex-wrap: nowrap;
    align-items: flex-start;
    gap: 2rem;
}
.mainContent section {
    flex: 1; /* take remaining space */
}
.mainContent aside {
    flex: 0 0 20rem; /* fixed width for ads */
}

@media (max-width: 768px) {
    .mainContent {
        flex-direction: column;
    }
    .mainContent section {
        max-width: 100%;
    }
    .mainContent aside {
        max-width: 100%;
        width: 100%;
        margin-top: 1rem;
    }
}
.features {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    margin: 5rem 5vw;
    perspective: 1000px;
}

.featureSides {
    display: flex;
    max-width: 20rem;
    flex-wrap: wrap;
    flex:1;
    gap: 0.5rem;
    flex-direction: row;
    margin: 0;
}

.feature {
    flex: 1 1 250px;
    background: var(--background);
    border-radius: 16px;
    padding: 1.5rem;
    text-align: center;
    transition: transform 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275),
        box-shadow 0.4s ease;
    cursor: pointer;
    backdrop-filter: blur(6px);
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.08);
    position: relative;
    overflow: hidden;
    z-index: 1;
    animation: featureAppear 0.6s ease backwards;
}

.featureSide {
    display: flex;
    flex-direction: column;
    background: var(--background);
    width: calc(100%/2 - 0.5rem) ;
    align-items: center;
    justify-content: center;
    padding: 1rem;
    text-align: center;
    transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
    border-radius: 16px;
    cursor: pointer;
    position: relative;
    box-shadow: 0 0px 10px rgba(0, 0, 0, 0.12);
    overflow: hidden;
    z-index: 1;
    font-size: 0.8rem;
    animation: featureAppear 0.6s ease backwards;
}

.featureSide:hover {
    transform: translateY(-10px) scale(1.03);
    background-color: white;
    box-shadow: 0 14px 30px rgba(0, 0, 0, 0.12);
}

.featureSide::before {
    content: '';
    position: absolute;
    inset: 0;
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0));
    opacity: 0;
    transition: opacity 0.4s ease;
    z-index: -1;
    border-radius: 16px;
}

.featureSide:hover::before {
    opacity: 1;
}

.featureSide .featureIcon {
    width: 70px;
    height: 70px;
    margin: 0 auto;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: transform 0.5s ease;
    position: relative;
    z-index: 2;
}

.featureSide h3 {
    font-weight: bold;
    margin: 1rem auto;
    display: inline-block;
    position: relative;
    transition: color 0.3s ease, transform 0.3s ease;
}

.featureSide:hover .featureIcon {
    transform: rotateY(180deg) scale(1.15);
}

.featureIcon img {
    width: 40px;
    height: 40px;
    transition: transform 0.5s ease;
}

.feature:hover .featureIcon img {
    transform: rotateY(-180deg);
}

.feature h3 {
    font-weight: bold;
    margin: 1rem auto;
    display: inline-block;
    position: relative;
    transition: color 0.3s ease, transform 0.3s ease;
}

.feature:nth-child(n) {
    animation-delay: calc(0.1s * var(--i, 1));
}

.feature:hover {
    transform: translateY(-10px) scale(1.03);
    box-shadow: 0 14px 30px rgba(0, 0, 0, 0.12);
}

.feature::before {
    content: '';
    position: absolute;
    inset: 0;
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.3), rgba(255, 255, 255, 0));
    opacity: 0;
    transition: opacity 0.4s ease;
    z-index: -1;
    border-radius: 16px;
}

.feature:hover::before {
    opacity: 1;
}

.featureIcon {
    width: 70px;
    height: 70px;
    margin: 0 auto;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: transform 0.5s ease;
    position: relative;
    z-index: 2;
}

.feature:hover .featureIcon {
    transform: rotateY(180deg) scale(1.15);
}

.featureIcon img {
    width: 40px;
    height: 40px;
    transition: transform 0.5s ease;
}

.feature:hover .featureIcon img {
    transform: rotateY(-180deg);
}

.feature h3 {
    font-weight: bold;
    margin: 1rem auto;
    display: inline-block;
    position: relative;
    transition: color 0.3s ease, transform 0.3s ease;
}

.feature:hover h3 {
    color: var(--primary);
    transform: translateY(-3px);
}

.feature h3::after {
    content: '';
    position: absolute;
    bottom: -5px;
    left: 50%;
    width: 0;
    height: 2px;
    background: var(--primary);
    transition: width 0.3s ease, left 0.3s ease;
}

.feature:hover h3::after {
    width: 100%;
    left: 0;
}

.feature p {
    margin: 0 auto;
    padding: 1rem;
    border-radius: 10px;
    transition: opacity 0.3s ease, transform 0.3s ease;
}

.feature:hover p {
    transform: translateY(2px);
    opacity: 0.9;
}

/* ========= Notices Section ========= */
.contentSection {
    display: flex;
    flex-wrap: wrap;
    gap: 1.5rem;
}


.noticeItem {
    background: rgba(255, 255, 255, 0.8);
    margin-bottom: 0.75rem;
    padding: 1.25rem;
    border-radius: 12px;
    box-shadow: 0 3px 10px rgba(0, 0, 0, 0.05);
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
    animation: noticeAppear 0.5s ease-out backwards;
}

.noticeItem:nth-child(n) {
    animation-delay: calc(0.1s * var(--i, 1));
}

.noticeItem:hover {
    transform: translateX(5px);
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
    background: rgba(255, 255, 255, 1);
}

.noticeItem::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    width: 4px;
    background: linear-gradient(to bottom, var(--tertiary), var(--quaternary));
    transition: width 0.3s ease;
    opacity: 0.7;
}

.noticeItem:hover::before {
    width: 8px;
}

.noticeHeader {
    display: flex;
    justify-content: space-between;
    margin-bottom: 0.5rem;
}

.noticeDateTime {
    font-size: 0.85rem;
    padding: 0.3rem 0.6rem;
    background: rgba(0, 0, 0, 0.05);
    border-radius: 20px;
    color: #666;
    transition: background 0.3s ease, transform 0.3s ease;
}

.noticeItem:hover .noticeDateTime {
    background: rgba(var(--primary-rgb), 0.1);
    transform: scale(1.05);
}

.noticeContent {
    padding-left: 0.5rem;
    transition: transform 0.3s ease;
}

.noticeItem:hover .noticeContent {
    transform: translateX(3px);
}

.clickableNotice {
    cursor: pointer;
    transition: var(--transition-normal);
    position: relative;
}

.clickableNotice:hover {
    transform: translateY(-2px);
    box-shadow: var(--hover-shadow);
    border-color: var(--tertiary);
}

.noticeTitle {
    font-size: 1.1rem;
    font-weight: 600;
    color: var(--darkforeground);
    margin-bottom: 8px;
    line-height: 1.3;
}

.noticePreview {
    font-size: 0.9rem;
    color: var(--gray);
    line-height: 1.4;
    margin-bottom: 10px;
}

.readMore {
    font-size: 0.8rem;
    color: var(--tertiary);
    font-weight: 500;
    text-align: right;
    opacity: 0;
    transition: var(--transition-normal);
}

.clickableNotice:hover .readMore {
    opacity: 1;
}

/* Update existing notice styles if needed */
.noticeItem {
    background: var(--white);
    border: 1px solid var(--secondaryBackground);
    border-radius: var(--border-radius-md);
    padding: 20px;
    margin-bottom: 15px;
    box-shadow: var(--card-shadow);
}

.noticeHeader {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 10px;
}

.noticeDateTime {
    font-size: 0.85rem;
    color: var(--gray);
    font-weight: 500;
}

.noticeContent {
    color: var(--foreground);
    line-height: 1.5;
}

/* ========= CTA Button ========= */
.viewAllButton {
    display: block;
    margin: 1.5rem auto 0.5rem;
    padding: 0.8rem 1.5rem;
    background: linear-gradient(135deg, var(--primary), var(--secondary));
    color: var(--background);
    border-radius: 30px;
    border: none;
    font-weight: 500;
    cursor: pointer;
    box-shadow: 0 4px 15px rgba(var(--primary-rgb), 0.3);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    position: relative;
    overflow: hidden;
}

.viewAllButton:hover {
    transform: translateY(-3px) scale(1.05);
    box-shadow: 0 8px 25px rgba(var(--primary-rgb), 0.4);
}

.viewAllButton::after {
    content: "";
    position: absolute;
    inset: 0;
    left: -100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
    transition: left 0.7s ease;
}

.viewAllButton:hover::after {
    left: 100%;
}

/* ========= Hero Section ========= */
.hero {
    display: flex;
    flex-wrap: wrap;
    flex-direction: row;
    justify-content: space-around;
    margin-left: 1rem;
    margin-right: 1rem;
    align-items: stretch;
    gap: 2rem;
}

.hero center {
    padding: 1rem;
    width: 100%;
    padding-top: 2rem;
    font-family: var(--font-serif);
    font-size: 0.9rem;
    text-transform: uppercase;
}

.heroContent {
    max-width: 70ch;
    padding: 2rem 4rem;
    backdrop-filter: blur(10px);
    border-radius: 1rem;
    animation: fadeInUp 1s ease forwards;
}

.heroContent h1 {
    font-size: 2.5rem;
    font-weight: bold;
    margin-bottom: 0.5rem;
}

.heroContent p {
    font-size: 1.1rem;
}

.logo {
    width: 200px;
}

/* ========= CTA Button ========= */
.ctaSection{
    display: flex;
    margin: auto;
    flex-direction: column;
    align-items: center;
}

.ctaSection p{
    font-family: var(--font-serif);
}

.ctaButton {
    margin-top: 1rem;
    padding: 0.8rem 1.6rem;
    font-weight: bold;
    font-size: 1rem;
    color: var(--background);
    background: linear-gradient(135deg, var(--tertiary), var(--quaternary));
    border-radius: 12px;
    cursor: pointer;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
    border: none;
    position: relative;
    overflow: hidden;
}

.ctaButton::after {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    width: 200%;
    height: 200%;
    transform: translate(-50%, -50%) scale(0);
    background: radial-gradient(circle, rgba(255, 255, 255, 0.3) 10%, transparent 40%);
    opacity: 0;
    pointer-events: none;
    transition: transform 0.4s ease, opacity 0.4s ease;
}

.ctaButton:hover::after {
    transform: translate(-50%, -50%) scale(1);
    opacity: 1;
}

.ctaButton:hover {
    transform: scale(1.06) translateY(-2px);
}

/* ========= States ========= */
.loadingNotices,
.noNotices {
    text-align: center;
    padding: 2rem;
    font-weight: 500;
}

.loadingNotices {
    color: var(--foreground);
}

.loadingNotices::after {
    content: "";
    display: block;
    width: 30px;
    height: 30px;
    margin: 15px auto 0;
    border: 3px solid rgba(var(--primary-rgb), 0.3);
    border-top-color: var(--primary);
    border-radius: 50%;
    animation: loadingSpin 1s linear infinite;
}

.noNotices {
    color: #666;
    font-style: italic;
}


/* Add/update these styles in your Home.module.css */

.heroContent {
    display: flex;
    gap: 2rem;
    align-items: flex-start;
    flex-wrap: wrap;
}

.featureSides {
    flex: 1;
    min-width: 25rem;
}

.noticesSection {
    flex: 1;
}

/* Existing highlight styles */

/* ========= Highlight Mode Styles ========= */
.highlightMode {
    position: relative;
}

.dimmed {
    opacity: 0.3;
    filter: blur(1px);
    transition: all 0.3s ease;
    pointer-events: none;
}

.highlighted {
    position: relative;
    z-index: 10;
    opacity: 1 !important;
    filter: none !important;
    pointer-events: auto !important;
}

.overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background: rgba(0, 0, 0, 0.1);
    z-index: 5;
    cursor: pointer;
}

.spotlighted {
    transform: scale(1.05);
    box-shadow: 0 0 30px rgba(255, 255, 255, 0.5);
    border: 2px solid #fff;
    transition: all 0.3s ease;
    animation: pulse 2s infinite;
}

.overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background: rgba(0, 0, 0, 0.1);
    z-index: 5;
    cursor: pointer;
}


/* Add these styles to your Home.module.css file */

.fullscreenOverlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background-color: rgba(0, 0, 0, 0.15);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    display: flex;
    justify-content: center;
    gap:0;
    align-items: center;
    z-index: 9999;
    animation: fadeIn 0.3s ease-in-out;
}
.fullscreenOverlay center{
    display: none;
}

.fullscreenContent {
    position: relative;
    width: 90%;
    max-width: 1200px;
    height: 80%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.closeButton {
    position: absolute;
    top: -50px;
    right: 0;
    background: transparent;
    border: none;
    color: white;
    font-size: 2rem;
    cursor: pointer;
    transition: all 0.3s ease;
    z-index: 10000;
}

.closeButton:hover {
    transform: scale(1.1);
    color: rgb(0,0,0);
}

.fullscreenFeatureSides {
    display: flex;
    flex-wrap: wrap;
    flex-direction: row;
    gap: 0.4rem;
    padding: 2rem;
    animation: scaleIn 0.4s ease-out 0.1s both;
}

/* Ensure the feature sides maintain their original styling in fullscreen */
.fullscreenFeatureSides .featureSide {
    flex: 1;
    border-radius: 1rem;
    min-width: 150px;
}

/* Animations */
@keyframes fadeIn {
    from {
        opacity: 0;
    }

    to {
        opacity: 1;
    }
}

@keyframes scaleIn {
    from {
        opacity: 0;
        transform: scale(0.8);
    }

    to {
        opacity: 1;
        transform: scale(1);
    }
}

/* Responsive adjustments */
@media (max-width: 768px) {
    .fullscreenContent {
        width: 95%;
        height: 90%;
    }

    .fullscreenFeatureSides {
        grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
        gap: 1rem;
    }

    .closeButton {
        top: -40px;
        font-size: 1.5rem;
    }
}

/* Smooth morphing animation */
@keyframes morphToFullscreen {
    from {
        position: relative;
        width: auto;
        height: auto;
        background-color: transparent;
        padding: 0;
    }

    to {
        position: fixed;
        top: 0;
        left: 0;
        width: 100vw;
        height: 100vh;
        background-color: rgba(0, 0, 0, 0.95);
        padding: 2rem;
    }
}

/* Ensure smooth transition back to normal */
.featureSides {
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
}

/* Responsive adjustments for fullscreen */
@media (max-width: 768px) {
    .featureSides.fullscreenMode {
        padding: 1rem;
    }

    .closeButton {
        top: 1rem;
        right: 1rem;
        width: 40px;
        height: 40px;
        font-size: 1.2rem;
    }

    .featureSides.fullscreenMode .featureSide {
        transform: scale(1);
    }

    .featureSides.fullscreenMode .featureSide:hover {
        transform: scale(1.05);
    }
}

/* Responsive adjustments for fullscreen */
@media (max-width: 768px) {
    .featureSides.fullscreenMode {
        padding: 1rem;
    }

    .closeButton {
        top: 1rem;
        right: 1rem;
        width: 40px;
        height: 40px;
        font-size: 1.2rem;
    }

    .featureSides.fullscreenMode .featureSide {
        transform: scale(1);
    }

    .featureSides.fullscreenMode .featureSide:hover {
        transform: scale(1.05);
    }
}

/* Animations */
@keyframes fadeIn {
    from {
        opacity: 0;
    }

    to {
        opacity: 1;
    }
}

@keyframes scaleIn {
    from {
        opacity: 0;
        transform: scale(0.8);
    }

    to {
        opacity: 1;
        transform: scale(1);
    }
}

/* Responsive adjustments */
@media (max-width: 768px) {
    .fullscreenContent {
        width: 95%;
        height: 90%;
    }

    .fullscreenFeatureSides {
        grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
        gap: 1rem;
    }

    .closeButton {
        top: -40px;
        font-size: 1.5rem;
    }
}

@keyframes pulse {

    0%,
    100% {
        box-shadow: 0 0 30px rgba(255, 255, 255, 0.5);
    }

    50% {
        box-shadow: 0 0 50px rgba(255, 255, 255, 0.8);
    }
}

/* Responsive behavior */
@media (max-width: 768px) {
    .heroContent {
        flex-direction: column;
    }

    .featureSides,
    .noticesSection {
        min-width: 100%;
    }
}

@keyframes pulse {

    0%,
    100% {
        box-shadow: 0 0 30px rgba(255, 255, 255, 0.5);
    }

    50% {
        box-shadow: 0 0 50px rgba(255, 255, 255, 0.8);
    }
}

/* ========= Animations ========= */
@keyframes featureAppear {
    from {
        opacity: 0;
        transform: translateY(30px) scale(0.9);
    }

    to {
        opacity: 1;
        transform: translateY(0) scale(1);
    }
}

@keyframes noticeAppear {
    from {
        opacity: 0;
        transform: translateX(-20px);
    }

    to {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes loadingSpin {
    to {
        transform: rotate(360deg);
    }
}

/* ========= Media Queries ========= */
@media (max-width: 768px) {
    .noticesAndDownloads {
        flex-direction: column;
    }

    .heroContent {
        padding: 2rem;
    }

    .logo {
        width: 150px;
    }
}
